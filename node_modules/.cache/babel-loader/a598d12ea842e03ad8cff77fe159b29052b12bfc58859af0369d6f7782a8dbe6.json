{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:4000';\nasync function http(path, options = {}) {\n  const token = localStorage.getItem('authToken');\n  const res = await fetch(`${API_BASE}${path}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      ...(options.headers || {})\n    },\n    ...options\n  });\n  if (!res.ok) {\n    const text = await res.text().catch(() => '');\n    throw new Error(text || res.statusText);\n  }\n  return res.json();\n}\nexport const AuthApi = {\n  login: credentials => http('/api/auth/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials)\n  }),\n  register: userData => http('/api/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  })\n};\nexport const UsersApi = {\n  getUsers: (params = {}) => {\n    const query = new URLSearchParams(params).toString();\n    return http(`/api/users?${query}`);\n  },\n  getUser: id => http(`/api/users/${id}`),\n  updateUser: (id, data) => http(`/api/users/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(data)\n  }),\n  deleteUser: id => http(`/api/users/${id}`, {\n    method: 'DELETE'\n  })\n};\nexport const PostsApi = {\n  getPosts: (params = {}) => {\n    const query = new URLSearchParams(params).toString();\n    return http(`/api/posts?${query}`);\n  },\n  getPostsByUser: (userId, params = {}) => {\n    const query = new URLSearchParams(params).toString();\n    return http(`/api/posts/user/${userId}?${query}`);\n  },\n  createPost: data => http('/api/posts', {\n    method: 'POST',\n    body: JSON.stringify(data)\n  }),\n  updatePost: (id, data) => http(`/api/posts/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(data)\n  }),\n  deletePost: id => http(`/api/posts/${id}`, {\n    method: 'DELETE'\n  })\n};\nexport const LikesApi = {\n  likePost: postId => http(`/api/likes/post/${postId}`, {\n    method: 'POST'\n  }),\n  unlikePost: postId => http(`/api/likes/post/${postId}`, {\n    method: 'DELETE'\n  }),\n  getPostLikes: postId => http(`/api/likes/post/${postId}`)\n};\nexport const FollowersApi = {\n  followUser: userId => http(`/api/followers/${userId}`, {\n    method: 'POST'\n  }),\n  unfollowUser: userId => http(`/api/followers/${userId}`, {\n    method: 'DELETE'\n  }),\n  getFollowers: userId => http(`/api/followers/followers/${userId}`),\n  getFollowing: userId => http(`/api/followers/following/${userId}`)\n};\nexport const CommentsApi = {\n  getPostComments: (postId, params = {}) => {\n    const query = new URLSearchParams(params).toString();\n    return http(`/api/comments/post/${postId}?${query}`);\n  },\n  createComment: (postId, data) => http(`/api/comments/post/${postId}`, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  }),\n  deleteComment: id => http(`/api/comments/${id}`, {\n    method: 'DELETE'\n  })\n};\nexport const AnalyticsApi = {\n  getSummary: () => http('/api/analytics/summary'),\n  getEngagement: () => http('/api/analytics/engagement'),\n  getContentPerformance: () => http('/api/analytics/content-performance'),\n  getUserGrowth: () => http('/api/analytics/user-growth')\n};\nexport default {\n  AuthApi,\n  UsersApi,\n  PostsApi,\n  LikesApi,\n  FollowersApi,\n  CommentsApi,\n  AnalyticsApi\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE","http","path","options","token","localStorage","getItem","res","fetch","headers","Authorization","ok","text","catch","Error","statusText","json","AuthApi","login","credentials","method","body","JSON","stringify","register","userData","UsersApi","getUsers","params","query","URLSearchParams","toString","getUser","id","updateUser","data","deleteUser","PostsApi","getPosts","getPostsByUser","userId","createPost","updatePost","deletePost","LikesApi","likePost","postId","unlikePost","getPostLikes","FollowersApi","followUser","unfollowUser","getFollowers","getFollowing","CommentsApi","getPostComments","createComment","deleteComment","AnalyticsApi","getSummary","getEngagement","getContentPerformance","getUserGrowth"],"sources":["D:/sm-analytics/src/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:4000';\r\n\r\nasync function http(path, options = {}) {\r\n  const token = localStorage.getItem('authToken');\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    headers: { \r\n      'Content-Type': 'application/json', \r\n      ...(token && { Authorization: `Bearer ${token}` }),\r\n      ...(options.headers || {}) \r\n    },\r\n    ...options,\r\n  });\r\n  if (!res.ok) {\r\n    const text = await res.text().catch(() => '');\r\n    throw new Error(text || res.statusText);\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport const AuthApi = {\r\n  login: (credentials) => http('/api/auth/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify(credentials)\r\n  }),\r\n  register: (userData) => http('/api/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify(userData)\r\n  })\r\n};\r\n\r\nexport const UsersApi = {\r\n  getUsers: (params = {}) => {\r\n    const query = new URLSearchParams(params).toString();\r\n    return http(`/api/users?${query}`);\r\n  },\r\n  getUser: (id) => http(`/api/users/${id}`),\r\n  updateUser: (id, data) => http(`/api/users/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data)\r\n  }),\r\n  deleteUser: (id) => http(`/api/users/${id}`, { method: 'DELETE' })\r\n};\r\n\r\nexport const PostsApi = {\r\n  getPosts: (params = {}) => {\r\n    const query = new URLSearchParams(params).toString();\r\n    return http(`/api/posts?${query}`);\r\n  },\r\n  getPostsByUser: (userId, params = {}) => {\r\n    const query = new URLSearchParams(params).toString();\r\n    return http(`/api/posts/user/${userId}?${query}`);\r\n  },\r\n  createPost: (data) => http('/api/posts', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data)\r\n  }),\r\n  updatePost: (id, data) => http(`/api/posts/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data)\r\n  }),\r\n  deletePost: (id) => http(`/api/posts/${id}`, { method: 'DELETE' })\r\n};\r\n\r\nexport const LikesApi = {\r\n  likePost: (postId) => http(`/api/likes/post/${postId}`, { method: 'POST' }),\r\n  unlikePost: (postId) => http(`/api/likes/post/${postId}`, { method: 'DELETE' }),\r\n  getPostLikes: (postId) => http(`/api/likes/post/${postId}`)\r\n};\r\n\r\nexport const FollowersApi = {\r\n  followUser: (userId) => http(`/api/followers/${userId}`, { method: 'POST' }),\r\n  unfollowUser: (userId) => http(`/api/followers/${userId}`, { method: 'DELETE' }),\r\n  getFollowers: (userId) => http(`/api/followers/followers/${userId}`),\r\n  getFollowing: (userId) => http(`/api/followers/following/${userId}`)\r\n};\r\n\r\nexport const CommentsApi = {\r\n  getPostComments: (postId, params = {}) => {\r\n    const query = new URLSearchParams(params).toString();\r\n    return http(`/api/comments/post/${postId}?${query}`);\r\n  },\r\n  createComment: (postId, data) => http(`/api/comments/post/${postId}`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(data)\r\n  }),\r\n  deleteComment: (id) => http(`/api/comments/${id}`, { method: 'DELETE' })\r\n};\r\n\r\nexport const AnalyticsApi = {\r\n  getSummary: () => http('/api/analytics/summary'),\r\n  getEngagement: () => http('/api/analytics/engagement'),\r\n  getContentPerformance: () => http('/api/analytics/content-performance'),\r\n  getUserGrowth: () => http('/api/analytics/user-growth'),\r\n};\r\n\r\nexport default { AuthApi, UsersApi, PostsApi, LikesApi, FollowersApi, CommentsApi, AnalyticsApi };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}